public void validateFilterResponse() {
        Response response = (Response) GlobalCache.get("API_RESPONSE");

        String filterType = GlobalCache.get("Filter").toString();

        List<Map<String, Object>> componentsInfo = response.jsonPath().getList("componentsInfo.content");
        Map<String, Map<String, Object>> componentMap = convertListToMap(componentsInfo);

        if (componentMap != null) {
            for (Map.Entry<String, Map<String, Object>> entry : componentMap.entrySet()) {
                Map<String, Object> data = entry.getValue();

                // Perform validation based on the filter type
                switch (filterType) {
                    case "genre":
                        validateGenreFilter(data);
                        break;
                    // Add cases for other filter types as needed
                    default:
                        // Handle other filter types if necessary
                }
            }
        } else {
            System.out.println("Component map is null. Unable to validate the filter response.");
        }
    }

    private Map<String, Map<String, Object>> convertListToMap(List<Map<String, Object>> list) {
        Map<String, Map<String, Object>> resultMap = new HashMap<>();

        for (int i = 0; i < list.size(); i++) {
            resultMap.put("element" + i, list.get(i));
        }

        return resultMap;
    }

    private void validateGenreFilter(Map<String, Object> data) {
        // Extract and validate the "genre" field from the data
        if (data.containsKey("genre")) {
            List<String> genres = (List<String>) data.get("genre");

            // Perform your validation logic here
            // For example, check if genres contains the expected values

            System.out.println("Validating genre filter: " + genres);
        } else {
            System.out.println("Genre field not found in data.");
        }
    }

    // Add similar methods for other filter types if needed
}
