public class playbackcall {     public Response Callplayback(String assetID, String av) {         Map<String, String> queryParams = new HashMap<>();         Map<String, String> headers = new HashMap<>();         callTheGeoLocation("linear");         Map<String, String> urlPathParamTableMap = new HashMap<>();         queryParams.put("id", assetID);         queryParams.put("idType", "linear");         queryParams.put("subType", "PB");         queryParams.put("isTrailer", "false");         queryParams.put("deviceProfile", "1");         queryParams.put("StreamType", "stream");         headers.put("Authorization", GlobalCache.get("authtoken").toString());         headers.put("accountId", GlobalCache.get("accountIdHash").toString());         headers.put("did", GlobalCache.get("did").toString());         headers.put("dt", GlobalCache.get("dt").toString());         headers.put("x-transaction-id", UUID.randomUUID().toString());         headers.put("geotoken", GlobalCache.get("linearGeoToken").toString());         headers.put("av", av);         urlPathParamTableMap.put("productId", GlobalCache.get("pt").toString());         commonSteps.prepareAPICallWParams("UMW_Playback", urlPathParamTableMap);         commonSteps.apiInfo.setQueryParams(queryParams);         commonSteps.apiInfo.setTokenizedHeader(headers);         commonSteps.api_call_is_made_for("UMW_Playback");         return (Response) GlobalCache.get(AppConstants.API_RESPONSE);     } }  @Then("call the Playback Api for linear assets in {string} and validate the playback with {string}") public void call_the_Playback_Api_for_linear_assets_in_and_validate_the_playback_with(String cr, String av) {     if (cr.equals("7")) {         ArrayList<String> CRDID = (ArrayList<String>) GlobalCache.get("CRID" + cr);         if(CRDID != null){             for (String assetID : CRDID) {                 playbackcall playback=new playbackcall();                 Response response=playbackcall.Callplayback(assetID,av);                  if (response.jsonPath().get("pUrl") != null) {                     String purl = response.jsonPath().get("pUrl").toString();                     GlobalCache.setFeatureValue("linearpUrl", purl);                     if ("6.3".equals(av)) {                         Assert.assertTrue(response.jsonPath().get("pUrl").toString().contains("extra"));                     } else {                         assertFalse("The Playback is done for av : " + av, response.jsonPath().get("pUrl").toString().contains("extra"));                     }                     break;                 }             }         }
